{"version":3,"file":"static/js/165.4115b439.chunk.js","mappings":"kMAEaA,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAOD,EAAAA,GAAAA,EAAH,2G,SCHF,SAASE,EAAT,GAA0C,IAAZC,EAAW,EAAXA,QAC3C,OACE,SAACJ,EAAD,WACE,SAACE,EAAD,UAAOE,KAGZ,C,yJCPYJ,EAAYC,EAAAA,GAAAA,IAAH,0CAITI,EAAOJ,EAAAA,GAAAA,GAAH,0CAIJK,EAAOL,EAAAA,GAAAA,GAAH,uNASJC,EAAOD,EAAAA,GAAAA,EAAH,wIAUJM,EAAWN,EAAAA,GAAAA,KAAH,iUAcRO,EAAYP,EAAAA,GAAAA,KAAH,gE,SChCP,SAASQ,EAAT,GAAsC,IAAZC,EAAW,EAAXA,QACvC,OACE,SAACV,EAAD,WACE,SAACK,EAAD,UACGK,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACR,EAAD,YACE,SAACC,EAAD,UAAWM,KACX,UAACX,EAAD,YACE,SAACM,EAAD,UAAW,cACVM,OAJMF,EAQd,OAIR,CCtBD,IAgCA,EAhCgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,YAA9B,eAAOP,EAAP,KAAgBQ,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,YAA1B,eAAOE,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBP,GACbQ,MAAK,SAAAC,GACJ,GAA4B,IAAxBA,EAAKC,QAAQC,OAAjB,CAMA,IAAMC,EAAcH,EAAKC,QAAQd,KAAI,kBAA8B,CACjEC,GADmC,EAAGA,GAEtCC,OAFmC,EAAOA,OAG1CC,QAHmC,EAAeA,QAAf,IAKrCI,EAAWS,EARV,MAFCP,EAAS,uBAWZ,IACAQ,OAAM,SAAAT,GAAK,OAAIC,EAASD,EAAMf,QAAnB,GACf,GAAE,CAACW,KAGF,2BACGI,IAAS,SAAC,IAAD,CAAoBf,QAASe,IACtCT,IAAW,SAACD,EAAD,CAAgBC,QAASA,MAG1C,C,4MClCDmB,IAAAA,SAAAA,QCFiB,+BDGjBA,IAAAA,SAAAA,OAAwB,CACtBC,QCLc,mCDMdC,OAAO,EACPC,SAAU,SAIL,IAAMC,EAAiB,mCAAG,sGACRJ,IAAAA,IAAU,uBADF,uBACvBL,EADuB,EACvBA,KADuB,kBAGpBA,EAAKC,SAHe,2CAAH,qDAOjBS,EAAY,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACHP,IAAAA,IAAA,8BAAiCM,EAAjC,iBAA+CC,IAD5C,uBAClBZ,EADkB,EAClBA,KADkB,kBAGjBA,EAAKC,SAHY,2CAAH,sDAOZY,EAAe,mCAAG,WAAMtB,GAAN,yFACNc,IAAAA,IAAA,iBAAoBd,IADd,uBACrBS,EADqB,EACrBA,KADqB,kBAGpBA,GAHoB,2CAAH,sDAOfc,EAAe,mCAAG,WAAMvB,GAAN,yFACNc,IAAAA,IAAA,iBAAoBd,EAApB,aADM,uBACrBS,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAOfF,EAAe,mCAAG,WAAMP,GAAN,yFACNc,IAAAA,IAAA,iBAAoBd,EAApB,aADM,uBACrBS,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD","sources":["components/ErrorOccurred/ErrorOccurred.styled.jsx","components/ErrorOccurred/ErrorOccurred.jsx","components/ReviewsContent/ReviewsContent.styled.jsx","components/ReviewsContent/ReviewsContent.jsx","components/Reviews/Reviews.jsx","service/api.js","service/api-key.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 40px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  color: #f17074;\n  font-size: 30px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Text } from './ErrorOccurred.styled';\n\nexport default function ErrorMessageToUser({ message }) {\n  return (\n    <Container>\n      <Text>{message}</Text>\n    </Container>\n  );\n}\n\nErrorMessageToUser.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n\nexport const List = styled.ul`\n  margin: -30px;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  margin: 30px;\n  padding: 25px;\n\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Text = styled.p`\n  line-height: 1.35;\n  color: #42362b;\n  margin-bottom: 8px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const TextBold = styled.span`\n  position: absolute;\n  top: -10px;\n  left: 10;\n  padding: 4px 10px;\n  font-weight: 700;\n  background-color: #42362b;\n  color: #fff;\n  border-radius: 2px;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const TextTitle = styled.span`\n  font-weight: 700;\n  color: #f25c54;\n`;\n","import {\n  Container,\n  List,\n  Item,\n  Text,\n  TextBold,\n  TextTitle,\n} from './ReviewsContent.styled';\nimport PropTypes from 'prop-types';\n// import { Container, Item, List, Text, TextBold, TextTitle } from './ReviewsContent.styled';\n\nexport default function ReviewsContent({ reviews }) {\n  return (\n    <Container>\n      <List>\n        {reviews.map(({ id, author, content }) => {\n          return (\n            <Item key={id}>\n              <TextBold>{author}</TextBold>\n              <Text>\n                <TextTitle>Reviews: </TextTitle>\n                {content}\n              </Text>\n            </Item>\n          );\n        })}\n      </List>\n    </Container>\n  );\n}\n\nReviewsContent.propTypes = {\n  reviews: PropTypes.array.isRequired,\n};\n\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'service/api';\nimport ErrorMessageToUser from 'components/ErrorOccurred/ErrorOccurred';\nimport ReviewsContent from 'components/ReviewsContent/ReviewsContent';\n\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(data => {\n        if (data.results.length === 0) {\n          setError('There are no reviews');\n          return;\n        }\n\n// prepare info about reviews\n        const reviewsInfo = data.results.map(({ id, author, content }) => ({\n          id,\n          author,\n          content,\n  }));\n        setReviews(reviewsInfo);\n      })\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <ErrorMessageToUser message={error} />}\n      {reviews && <ReviewsContent reviews={reviews} />}\n    </div>\n  );\n}\n\nexport default  Reviews\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from './api-key';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  adult: false,\n  language: 'en-US',\n};\n\n// ! ====== for component Home popular movies ======\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n\n      return data.results;\n}\n\n// ! ====== for component Movies search movies ======\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n\n    return data.results;\n};\n\n// ! ====== for details info about movie ======\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n\n    return data;\n};\n\n// ! ====== get info about the cast of movie ======\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n\n  return data;\n};\n\n// ! ====== get info about the rewiews of movie ======\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n\n  return data;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// !========================Work Requests to API =================================================\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице -\n// https://api.themoviedb.org/3/trending/movie/day?api_key=0d9ddfeb4636025259fcaee6725b8ad3\n\n// поиск кинофильма по ключевому слову на странице фильмов\n// https://api.themoviedb.org/3/search/movie?query=batman&api_key=0d9ddfeb4636025259fcaee6725b8ad3&page=1\n\n//\n// запрос полной информации о фильме для страницы кинофильма\n// https://api.themoviedb.org/3/movie/697843?api_key=0d9ddfeb4636025259fcaee6725b8ad3\n\n//\n// запрос информации о актёрском составе для страницы кинофильма\n// https://api.themoviedb.org/3/movie/697843/credits?language=en-US&api_key=0d9ddfeb4636025259fcaee6725b8ad3\n//\n// запрос обзоров для страницы кинофильма.\n// https://api.themoviedb.org/3/movie/298618/reviews?language=en-US&page=1&api_key=0d9ddfeb4636025259fcaee6725b8ad3\n\n// URL для фото https://image.tmdb.org/t/p/original/ ${film.backdrop_path})\n","const API_KEY = '0d9ddfeb4636025259fcaee6725b8ad3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport {API_KEY, BASE_URL}\n"],"names":["Container","styled","Text","ErrorMessageToUser","message","List","Item","TextBold","TextTitle","ReviewsContent","reviews","map","id","author","content","movieId","useParams","useState","setReviews","error","setError","useEffect","getMovieReviews","then","data","results","length","reviewsInfo","catch","axios","api_key","adult","language","getTrendingMovies","searchMovies","query","page","getMovieDetails","getMovieCredits"],"sourceRoot":""}
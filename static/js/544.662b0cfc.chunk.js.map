{"version":3,"file":"static/js/544.662b0cfc.chunk.js","mappings":"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","sources":["components/ErrorOccurred/ErrorOccurred.styled.jsx","components/ErrorOccurred/ErrorOccurred.jsx","components/MoviesList/MoviesList.styles.js","components/MovieListItem/MovieListItem.styled.jsx","components/MovieListItem/MovieListItem.jsx","components/MoviesList/MoviesList.js","pages/Home/Home.jsx","service/api.js","service/api-key.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 40px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  color: #f17074;\n  font-size: 30px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Text } from './ErrorOccurred.styled';\n\nexport default function ErrorMessageToUser({ message }) {\n  return (\n    <Container>\n      <Text>{message}</Text>\n    </Container>\n  );\n}\n\nErrorMessageToUser.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\n\nconst List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  grid-gap: 16px;\n  margin: 20px auto;\n  padding: 0;\n  list-style: none;\n`;\n\nexport default List\n","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n`;\n\nexport const Title = styled.h2`\n  padding: 5px 10px;\n  font-size: 21px;\n  color: #42362b;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, Image, Title } from './MovieListItem.styled';\n\n const MovieListItem = ({ id, title, poster }) => {\n\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div>\n          <Image\n            src={\n              poster\n                ? `https://image.tmdb.org/t/p/w500${poster}`\n                : `https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/No-image-available.jpg/640px-No-image-available.jpg`\n            }\n            alt=\"{title}\"\n          />\n        </div>\n        <Title>{title ? title : 'No tittle'}</Title>\n      </Link>\n    </Item>\n  );\n }\nexport default MovieListItem\n\n\nMovieListItem.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.number,\n  poster: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport  List  from \"./MoviesList.styles\";\nimport  MovieListItem  from \"../MovieListItem/MovieListItem\";\n\nconst MoviesList = ({movies}) => {\nreturn (\n    <List>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <MovieListItem\n            key={id}\n            id={id}\n            title={title}\n            poster={poster_path}\n          />\n        );\n      })}\n    </List>\n  );\n}\n\nexport default MoviesList\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\n","import React, { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { getTrendingMovies } from \"service/api\";\nimport ErrorMessageToUser from 'components/ErrorOccurred/ErrorOccurred';\nimport Loader from 'components/Loader/Loader';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\n\nconst Home = () => {\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingFilm = async () => {\n      setStatus(STATUS.PENDING);\n\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data);\n        setStatus(STATUS.RESOLVED);\n        setError(null);\n      } catch (error) {\n        setStatus(STATUS.REJECTED);\n        setError(error.message);\n      }\n    };\n\n    fetchTrendingFilm();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {status === STATUS.REJECTED && <ErrorMessageToUser message={error} />}\n      {status === STATUS.PENDING && <Loader />}\n      {status === STATUS.RESOLVED && <MoviesList movies={movies} />}\n\n    </main>\n  );\n};\n\nexport  default Home\n\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from './api-key';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  adult: false,\n  language: 'en-US',\n};\n\n// ! ====== for component Home popular movies ======\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n\n      return data.results;\n}\n\n// ! ====== for component Movies search movies ======\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n\n    return data.results;\n};\n\n// ! ====== for details info about movie ======\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n\n    return data;\n};\n\n// ! ====== get info about the cast of movie ======\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n\n  return data;\n};\n\n// ! ====== get info about the rewiews of movie ======\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n\n  return data;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// !========================Work Requests to API =================================================\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице -\n// https://api.themoviedb.org/3/trending/movie/day?api_key=0d9ddfeb4636025259fcaee6725b8ad3\n\n// поиск кинофильма по ключевому слову на странице фильмов\n// https://api.themoviedb.org/3/search/movie?query=batman&api_key=0d9ddfeb4636025259fcaee6725b8ad3&page=1\n\n//\n// запрос полной информации о фильме для страницы кинофильма\n// https://api.themoviedb.org/3/movie/697843?api_key=0d9ddfeb4636025259fcaee6725b8ad3\n\n//\n// запрос информации о актёрском составе для страницы кинофильма\n// https://api.themoviedb.org/3/movie/697843/credits?language=en-US&api_key=0d9ddfeb4636025259fcaee6725b8ad3\n//\n// запрос обзоров для страницы кинофильма.\n// https://api.themoviedb.org/3/movie/298618/reviews?language=en-US&page=1&api_key=0d9ddfeb4636025259fcaee6725b8ad3\n\n// URL для фото https://image.tmdb.org/t/p/original/ ${film.backdrop_path})\n","const API_KEY = '0d9ddfeb4636025259fcaee6725b8ad3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport {API_KEY, BASE_URL}\n"],"names":["Container","styled","Text","ErrorMessageToUser","message","Item","Image","Title","id","title","poster","location","useLocation","to","state","from","src","alt","movies","map","poster_path","STATUS","useState","status","setStatus","setMovies","error","setError","useEffect","fetchTrendingFilm","getTrendingMovies","data","axios","api_key","adult","language","results","searchMovies","query","page","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}